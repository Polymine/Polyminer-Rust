name: Rust CI/CD

on:
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "main"
  schedule:
    - cron: '0 0 * * 0' # Run every Sunday at midnight
  workflow_dispatch: # Allow manual trigger

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update && sudo apt-get install -y ocl-icd-opencl-dev
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          choco install opencl-sdk -y
          choco install llvm -y
        else
          echo "macOS already includes OpenCL support."
        fi

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install macOS target
      if: runner.os == 'macOS'
      run: rustup target add x86_64-apple-darwin

    - name: Build
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cargo build --release --target x86_64-pc-windows-msvc
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cargo build --release --target x86_64-apple-darwin
        else
          cargo build --release
        fi

    - name: Run tests
      run: cargo test --verbose

    - name: Archive artifacts
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/release/polyminer.exe artifacts/
          7z a artifacts/polyminer-windows.zip artifacts/polyminer.exe
        else
          cp target/release/polyminer artifacts/
          tar -czvf artifacts/polyminer-${{ matrix.os }}.tar.gz -C artifacts polyminer
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: polyminer-${{ matrix.os }}
        path: artifacts/*

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          artifacts/polyminer-ubuntu-latest/polyminer-ubuntu-latest.tar.gz
          artifacts/polyminer-windows-latest/polyminer-windows.zip
          artifacts/polyminer-macos-latest/polyminer-macos-latest.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
